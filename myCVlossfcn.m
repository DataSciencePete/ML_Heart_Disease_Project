function loss = myCVlossfcn(params,In,Out,opts,cvp)


% A = @(XTRAIN,YTRAIN,XTEST)(predict(TreeBagger(numTrees,XTRAIN,YTRAIN,'method','classification','Options',opts,...
%  'MinLeafSize',params.minLS,'NumPredictorstoSample',params.numPTS), XTEST));
A = @(XTRAIN,YTRAIN,XTEST)(predict(TreeBagger(params.numTrees,XTRAIN,YTRAIN,'method','classification', 'OOBPrediction','on', 'Options',opts,...
  'MinLeafSize',params.minLS, 'NumPredictorsToSample', 1), XTEST));
                                    
loss = crossval('mcr',In,Out,'predfun',A,'partition',cvp);
end


       
% A = @(XTRAIN,YTRAIN,XTEST,YTEST)(confusionmat(YTEST,...
%                                                        categorical(...
%                                                        cellfun(@str2num,... % convert cell array of character vectors to a cell array of numerics
%                                                        predict(...
%                                                         TreeBagger(...
%                                                             params.numTrees,XTRAIN,YTRAIN,...
%                                                             'method','classification',...
%                                                             'OOBPrediction','on',...
%                                                             'Options',opts,...
%                                                             'MinLeafSize',params.minLS,...
%                                                             'NumPredictorsToSample', params.numPTS),...
%                                                                 XTEST...
%                                                                ))),...
%                                                        'order', order...
%                                                       )...
%                                           );